#--------------------- Move3D -------------------------------------------------
IF(DEFINED LIBMOVE3D_PC)
	SET(ENV{PKG_CONFIG_PATH} ${LIBMOVE3D_PC}:$ENV{PKG_CONFIG_PATH})
ENDIF()
pkg_check_modules(MOVE3D REQUIRED "libmove3d")

INCLUDE_DIRECTORIES(${MOVE3D_INCLUDE_DIRS})
SET(LIBS ${LIBS} ${MOVE3D_LIBRARIES})
LINK_DIRECTORIES( ${MOVE3D_LIBRARY_DIRS} )
#MESSAGE( MOVE3D_LIBRARIES = ${MOVE3D_LIBRARIES})
#MESSAGE("rrrrrrrrrRRRR ${MOVE3D_INCLUDE_DIRS}")
#--------------- OPENGL -------------------------------------------------------
FIND_PACKAGE(X11 REQUIRED)
INCLUDE_directories(${X11_INCLUDE_DIR})
SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${X11_INCLUDE_DIR})
SET(LIBS ${LIBS} ${X11_LIBRARIES})

IF(APPLE)
	IF(GL_NATIVE)
  		FIND_PACKAGE(OpenGL REQUIRED)
  		INCLUDE_directories("${OPENGL_INCLUDE_DIR}/Headers")
  		SET(INCLUDE_DIRS ${INCLUDE_DIRS} "${OPENGL_INCLUDE_DIR}/Headers")
  		SET(LIBS ${LIBS} ${OPENGL_LIBRARIES})
  		Message(${OPENGL_INCLUDE_DIR})
  		Message(${OPENGL_LIBRARIES})
  		IF(MOVE3D_XFORMS)
  			FIND_PACKAGE(GLU REQUIRED)
  			INCLUDE_directories(${GLU_INCLUDE_DIR})
  			SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${GLU_INCLUDE_DIR})
  			SET(LIBS ${LIBS} ${GLU_LIBRARIES})
  			FIND_PACKAGE(GL REQUIRED)
  			INCLUDE_directories(${GL_INCLUDE_DIR})
  			SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${GL_INCLUDE_DIR})
  			SET(LIBS ${LIBS} ${GL_LIBRARIES})
  		ENDIF(MOVE3D_XFORMS)
	ELSE(GL_NATIVE)
		FIND_PACKAGE(GLU REQUIRED)
  		INCLUDE_directories(${GLU_INCLUDE_DIR})
  		SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${GLU_INCLUDE_DIR})
  		SET(LIBS ${LIBS} ${GLU_LIBRARIES})
  		FIND_PACKAGE(GL REQUIRED)
  		INCLUDE_directories(${GL_INCLUDE_DIR})
  		SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${GL_INCLUDE_DIR})
  		SET(LIBS ${LIBS} ${GL_LIBRARIES})
	ENDIF(GL_NATIVE)
ELSE(APPLE)
  FIND_PACKAGE(OpenGL REQUIRED)
  INCLUDE_directories(${OPENGL_INCLUDE_DIR})
  SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${OPENGL_INCLUDE_DIR})
  SET(LIBS ${LIBS} ${OPENGL_LIBRARIES})

  FIND_PACKAGE(GLU REQUIRED)
  INCLUDE_directories(${GLU_INCLUDE_DIR})
  SET(INCLUDE_DIRS ${INCLUDE_DIRS} ${GLU_INCLUDE_DIR})
  SET(LIBS ${LIBS} ${GLU_LIBRARIES})
ENDIF(APPLE)

#------------------- softMotion -----------------------------------------------	

pkg_check_modules(SOFTMOTION REQUIRED "softMotion-libs")

INCLUDE_DIRECTORIES(${SOFTMOTION_INCLUDE_DIRS})
SET(LIBS ${LIBS} ${SOFTMOTION_LIBRARIES})
LINK_DIRECTORIES( ${SOFTMOTION_LIBRARY_DIRS} )
MESSAGE( SOFTMOTION_LIBRARIES = ${SOFTMOTION_LIBRARIES})

#------------------------------------------------------------------------------	

IF(HRI_GUI)
	MESSAGE("Building move3d-studio with HRI support")
	ADD_SUBDIRECTORY(hri-gui)
ENDIF()

FOREACH (srcfile 
	FORMconstraints.cpp 
	FORMdiffusion.cpp 
	FORMenv.cpp 
	FORMfilter.cpp 
	FORMmain.cpp 
	FORMmobcam.cpp 
	FORMoptim.cpp 
	FORMpath_deform.cpp 
	FORMplanner.cpp 
	FORMrobot.cpp 
	FORMsteering.cpp
	FORMmultiLocalPath.cpp 
	FORMsoftMotion.cpp
	FORMgenom.cpp
	g3d_draw_ui.cpp
	g3d_window.cpp
	FORMgraspPlanning.cpp
	FORMuser_appli.cpp
	user_appli.cpp
	)
	LIST(APPEND MOVE3DSTUDIO_SRC ${srcfile})
ENDFOREACH(srcfile)

ADD_LIBRARY(move3d-xforms STATIC ${MOVE3DSTUDIO_SRC})



#ADD_EXECUTABLE(move3d-xforms-studio move3d.cpp ${INCLUDE_DIRS})
#TARGET_LINK_LIBRARIES(move3d-xforms-studio move3d-xforms ${LIBS})
ADD_EXECUTABLE(move3d-studio move3d.cpp ${INCLUDE_DIRS})

IF(HRI_GUI)
TARGET_LINK_LIBRARIES(move3d-studio move3d-xforms ${LIBS} hri-gui)
ELSE()
TARGET_LINK_LIBRARIES(move3d-studio move3d-xforms ${LIBS})
ENDIF()
# -------------------------------------------------------------
# --- Installation --------------------------------------------
# -------------------------------------------------------------

##IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
##  SET(CMAKE_INSTALL_PREFIX "$ENV{ROBOTPKG_BASE}" CACHE PATH "move3d-xforms install prefix" FORCE)
##ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
##INSTALL(TARGETS move3d-xforms-studio
##        RUNTIME DESTINATION bin PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE CONFIGURATIONS ${CMAKE_BUILD_TYPE})


#IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
#  SET(CMAKE_INSTALL_PREFIX "${MOVE3DSTUDIO_BINARY_DIR}/" CACHE PATH "move3d-studio install prefix" FORCE)
#ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
#
#INSTALL(TARGETS move3d-studio
#        RUNTIME DESTINATION bin 
#		CONFIGURATIONS ${CMAKE_BUILD_TYPE})

		
